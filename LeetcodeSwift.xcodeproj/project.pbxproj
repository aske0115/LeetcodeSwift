// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 55;
	objects = {

/* Begin PBXFileReference section */
		681115992942222100F5D9DF /* 872. Leaf-Similar Trees.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "872. Leaf-Similar Trees.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		682BE210294F59C6007B80D0 /* 739. Daily Temperatures.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "739. Daily Temperatures.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		687A3C68294B683C00E5C985 /* 1143. Longest Common Subsequence.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1143. Longest Common Subsequence.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		68C268732940E0CC00201CE9 /* 938. Range Sum of BST.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "938. Range Sum of BST.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		68E6B40D29C1F99B00275222 /* 958. Check Completeness of a Binary Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "958. Check Completeness of a Binary Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		D02D62CD29058BA000BD4764 /* 645. Set Mismatch.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "645. Set Mismatch.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		D02D62CE29058C4500BD4764 /* 20. Valid Parentheses.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "20. Valid Parentheses.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		D02D62CF29058F6000BD4764 /* 232. Implement Queue using Stacks.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "232. Implement Queue using Stacks.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		D039BB06278C5C24009142ED /* 2.Remove Duplicates from Sorted Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2.Remove Duplicates from Sorted Array.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		D03A2A7A29028BBF00DA745F /* 141. Linked List Cycle.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "141. Linked List Cycle.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		D03A2A7B2902967C00DA745F /* 203. Remove Linked List Elements.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "203. Remove Linked List Elements.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		D03D19BE28B755E600BFDEE2 /* 383_ransomNote.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = 383_ransomNote.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		D053EE502903B47F0042393F /* 83. Remove Duplicates from Sorted List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "83. Remove Duplicates from Sorted List.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		D08A9B5C2785B98E00B75A0A /* 1.TwoSum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = 1.TwoSum.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		D0B807AF29027978009D896C /* 219. Contains Duplicate II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "219. Contains Duplicate II.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		D0E7285A27903F1000DC1133 /* 3. Best Time to But and Sell Stock II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "3. Best Time to But and Sell Stock II.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		D0E7285B27904B6100DC1133 /* 4. Contains Duplicate.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "4. Contains Duplicate.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		D0E7285C27906C5900DC1133 /* 5. Plus One.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "5. Plus One.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC04407E291DE8BD00206D65 /* 26. Remove Duplicates from Sorted Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "26. Remove Duplicates from Sorted Array.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC05FECE28C4D96800FF8126 /* 28. Find the Index of the First Occurrence in a String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "28. Find the Index of the First Occurrence in a String.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC0813C528C9824500B368E0 /* 94. Binary Tree Inorder Traversal.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "94. Binary Tree Inorder Traversal.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC081DA32987F922008BE61D /* 1137. N-th Tribonacci Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1137. N-th Tribonacci Number.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC0AAD8E29907D1300D521F1 /* 1470. Shuffle the Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1470. Shuffle the Array.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC0CC7C628E3D13A00BBAA6A /* 98. Validate Binary Search Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "98. Validate Binary Search Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC0CC7C728E406BA00BBAA6A /* 235. Lowest Common Ancestor of a Binary Search Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "235. Lowest Common Ancestor of a Binary Search Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC0E21FF2908C48D004603FB /* 226. Invert Binary Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "226. Invert Binary Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC0F7F3129065F5800A6439F /* 145. Binary Tree Postorder Traversal.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "145. Binary Tree Postorder Traversal.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC100E52298A44100008F902 /* 1071. Greatest Common Divisor of Strings.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1071. Greatest Common Divisor of Strings.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC110A0D291B71B60008891A /* 901. Online Stock Span.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "901. Online Stock Span.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC13B73128F68FF600F90F50 /* 976. Largest Perimeter Triangle.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "976. Largest Perimeter Triangle.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC15224428E284FC0029000C /* 704. Binary Search.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "704. Binary Search.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC15224528E2A32B0029000C /* 278. First Bad Version.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "278. First Bad Version.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC17E10328DD6CD1007E0C4F /* 21. Merge Two Sorted Lists.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "21. Merge Two Sorted Lists.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC17E10428DD77D5007E0C4F /* 206. Reverse Linked List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "206. Reverse Linked List.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC17E10528DDB3BB007E0C4F /* 1680. Concatenation of Consecutive Binary Numbers.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1680. Concatenation of Consecutive Binary Numbers.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC19588C28D5A42000F346EC /* 326. Power of Three.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "326. Power of Three.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC1B0EB7299C771900165904 /* 989. Add to Array-Form of Integer.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "989. Add to Array-Form of Integer.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC1D868228C6C238008674D5 /* 429_n-ary_Tree_Level_Order_traversal.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "429_n-ary_Tree_Level_Order_traversal.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC1D868328C6D82D008674D5 /* 814. Binary Tree Pruning.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "814. Binary Tree Pruning.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC1D868428C71B1D008674D5 /* 14_Lognest Common Prefix.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "14_Lognest Common Prefix.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC1DE9FB28F8F74900EB6236 /* 2095. Delete the Middle Node of a Linked List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2095. Delete the Middle Node of a Linked List.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC26AD2D28BDC86B003A8879 /* 48_RotateImage.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = 48_RotateImage.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC280D7528B366FC007FD6F1 /* 342_PowerOfFour.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = 342_PowerOfFour.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC28B0D8296800460023F457 /* 1833. Maximum Ice Cream Bars.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1833. Maximum Ice Cream Bars.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC290727299779ED003855B4 /* 680. Valid Palindrome II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "680. Valid Palindrome II.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC31A0E328B4BB230076514C /* 234_Palindrome_Linked_List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = 234_Palindrome_Linked_List.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC324CB628DF440E002663EB /* 876. Middle of the Linked List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "876. Middle of the Linked List.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC324CB728DF4485002663EB /* 142. Linked List Cycle II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "142. Linked List Cycle II.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC3E41BF28EE824E00073B45 /* 981. Time Based Key-Value Store.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "981. Time Based Key-Value Store.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC3E878729991C98003C2E2B /* 860. Lemonade Change.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "860. Lemonade Change.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC40FBD428E13FE900758F58 /* 990. Satisfiability of Equality Equations.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "990. Satisfiability of Equality Equations.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC40FBD528E16EEB00758F58 /* 589. N-ary Tree Preorder Traversal.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "589. N-ary Tree Preorder Traversal.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC40FBD628E18D0100758F58 /* 102. Binary Tree Level Order Traversal.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "102. Binary Tree Level Order Traversal.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC49BEAC28DC38260022DC3F /* 392.Is Subsequence.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "392.Is Subsequence.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC4A1B4428EA892D00510352 /* 746. Min Cost Climbing Stairs.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "746. Min Cost Climbing Stairs.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC4A4AFE290F5E0B00750F34 /* 234. Palindrom Linked List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "234. Palindrom Linked List.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC4F568D2921240F0075E946 /* 151. Reverse Words in a String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "151. Reverse Words in a String.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC5152C228B2053E00951CBF /* 2_Add Two Numbers.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2_Add Two Numbers.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC55FE1628A62C98006FECED /* TopKFrequentElements.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = TopKFrequentElements.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC56DC8529076D790057C9A4 /* 1662. Check If Two String Arrays are Equivalent.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1662. Check If Two String Arrays are Equivalent.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC56DC862907794C0057C9A4 /* 104. Maximum Depth of Binary Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "104. Maximum Depth of Binary Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC5B31FF28FF934D00B8459E /* 74. Search a 2D Matrix.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "74. Search a 2D Matrix.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC5D95E429F9086700F95BD1 /* 258. Add Digits.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "258. Add Digits.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC6137E6291105E60031A8EB /* 766. Toeplitz Matrix.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "766. Toeplitz Matrix.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC636A5628F541AE00491B40 /* 334. Increasing Triplet Subsequence.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "334. Increasing Triplet Subsequence.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC6D53E628ED51160090795F /* 1046. Last Stone Weight.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1046. Last Stone Weight.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC6D53E728ED6FCB0090795F /* 692. Top K Frequent Words.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "692. Top K Frequent Words.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC6D53E828ED832B0090795F /* 394. Decode String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "394. Decode String.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC79320828E0926200073485 /* 121. Best Time to Buy and Sell Stock.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "121. Best Time to Buy and Sell Stock.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC79320928E092B100073485 /* 409. Longest Palindrome.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "409. Longest Palindrome.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC7A8A2E292CB2DD002A94F5 /* 1614. Maximum Nesting Depth of the Parentheses.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1614. Maximum Nesting Depth of the Parentheses.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC7AB85828A3D547008EB9AF /* ValidAnagram.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = ValidAnagram.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC7AB85928A3D6DF008EB9AF /* GroupAnagrams.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = GroupAnagrams.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC7AB85B28A3DFD4008EB9AF /* 108.Convert Sorted Array to Binary Search Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "108.Convert Sorted Array to Binary Search Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC7AB85D28A3E879008EB9AF /* ValidPalindrome.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = ValidPalindrome.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC7B1250299A2F62000B2F3D /* 1523. Count Odd Numbers in an Interval Range.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1523. Count Odd Numbers in an Interval Range.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC7B1251299A36C1000B2F3D /* 942. DI String Match.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "942. DI String Match.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC7CAB0929A86977007158B3 /* 2160. Minimum Sum of Four Digit Number After Splitting Digits.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2160. Minimum Sum of Four Digit Number After Splitting Digits.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC7F5EDA299B42A1005DAC61 /* 67. Add Binary.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "67. Add Binary.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC7FE8AF2900E143005F761C /* 12. Integer to Roman.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "12. Integer to Roman.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC88D61029234E53000AC4F9 /* 222. Count Complete Tree Nodes.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "222. Count Complete Tree Nodes.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC8A0068291C90CA00213D39 /* 1047. Remove All Adjacent Duplicates In String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1047. Remove All Adjacent Duplicates In String.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC8D040728FE41750080FE04 /* 38. Count and Say.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "38. Count and Say.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC8D040828FE69630080FE04 /* 566. Reshape the Matrix.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "566. Reshape the Matrix.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC8D040928FE726C0080FE04 /* 118. Pascal's Triangle.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "118. Pascal's Triangle.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC8F862928E555990042F6E7 /* 733. Flood Fill.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "733. Flood Fill.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC8F862A28E5784F0042F6E7 /* 200. Number of Islands.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "200. Number of Islands.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC93760528FAF21100EE3CF1 /* 53. Maximum Subarray.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "53. Maximum Subarray.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC9D953628C02919009FBACF /* StringToInteger(atoi).playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "StringToInteger(atoi).playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FC9D953728C047ED009FBACF /* 1448_count_good_Nodes_In_Binary_Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = 1448_count_good_Nodes_In_Binary_Tree.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCA337DE28ABBF7C00AAA9F0 /* 2351_FirstLetterToAppearTwice(associate 387).playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2351_FirstLetterToAppearTwice(associate 387).playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCA567AE28C8354700413660 /* 606_ConstructStringFromBinaryTree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = 606_ConstructStringFromBinaryTree.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCA5852428DAA652006B1105 /* 985. Sum of Even Numbers After Queries.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "985. Sum of Even Numbers After Queries.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCA5852628DAFE73006B1105 /* 1480. Running Sum of 1d Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1480. Running Sum of 1d Array.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCA5852728DB0230006B1105 /* 724. Find Pivot Index.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "724. Find Pivot Index.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCA7AD4328D9553000A0440D /* 718.Maximum Length of Repeated Subarray.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "718.Maximum Length of Repeated Subarray.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCA96ECE28BEFEF700651359 /* MoveZeroes.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = MoveZeroes.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCAB889528C18BCA00652244 /* 637_AvarageOfLevelsInBinaryTree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = 637_AvarageOfLevelsInBinaryTree.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCAE6F87288D1F9D0032CB1F /* RomanInteger.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = RomanInteger.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCB69DE128D88CEC00B63B09 /* 237.DeleteNodeInALinkedList.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = 237.DeleteNodeInALinkedList.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCB69DE228D88D4A00B63B09 /* 19. Remove Nth Node From End of List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "19. Remove Nth Node From End of List.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCB82AAA292484CD006729FF /* 374. Guess Number Higher or Lower.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "374. Guess Number Higher or Lower.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCB9F29628BC923C00E69C70 /* IntersectinoOfTwoArrays2.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = IntersectinoOfTwoArrays2.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCB9F29728BC958300E69C70 /* Rotate Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Rotate Array.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCB9F29828BCC45500E69C70 /* ReverseInteger.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = ReverseInteger.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCBCBF7628FBE75600483644 /* 88. Merge Sorted Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "88. Merge Sorted Array.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCBE74A028AC9B0900107F82 /* 804_Unique_Morse_Code_Words.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = 804_Unique_Morse_Code_Words.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCC08E2829189DCB00E2650F /* 1323. Maximum 69 Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1323. Maximum 69 Number.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCC1628B28AB9D7900773A2C /* 387_FirstUniqueCharacterInString.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = 387_FirstUniqueCharacterInString.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCC7B34228DBEA1800D52249 /* 557. Reverse Words in a String III.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "557. Reverse Words in a String III.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCC7B34328DBEE2D00D52249 /* 205. Isomorphic Strings.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "205. Isomorphic Strings.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCCA9EFF296EAFFF005D8288 /* 561. Array Partition.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "561. Array Partition.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCCAF272291A29F400F6524E /* 1544. Make The String Great.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1544. Make The String Great.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCCD8FCC28BC88F6002B9188 /* SingleNumber.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = SingleNumber.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCD8F4DB290A12B500499084 /* 700. Search in a Binary Search Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "700. Search in a Binary Search Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCD8F4DC290A131100499084 /* 701. Insert into a Binary Search Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "701. Insert into a Binary Search Tree.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCDBC03D28CB774F00493DB2 /* 1996. The Number of Weak Characters in the Game.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1996. The Number of Weak Characters in the Game.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCDE900A2914C5E900460C25 /* 345. Reverse Vowels of a String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "345. Reverse Vowels of a String.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCDE900B291500CF00460C25 /* 9. Palindrome Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "9. Palindrome Number.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCE2BE9428B5AC550030FCDA /* 326_PowerOfThree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = 326_PowerOfThree.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCE345C5299681D3002A35DD /* 605. Can Place Flowers.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "605. Can Place Flowers.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCE698BD28AE5CAC003379E8 /* 1338_Reduce_Array_Size_to_The_Half.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = 1338_Reduce_Array_Size_to_The_Half.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCE7BBAE290B754E00180F34 /* 653. Two Sum IV - Input is a BST.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "653. Two Sum IV - Input is a BST.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCE95D2729139E5500629F4D /* 204. Count Primes.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "204. Count Primes.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCE9E1CF2963A6890007F079 /* 520. Detect Capital.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "520. Detect Capital.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCE9E1D029641DCE0007F079 /* 944. Delete Columns to Make Sorted.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "944. Delete Columns to Make Sorted.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCF5266E29952A9E007258A1 /* 455. Assign Cookies.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "455. Assign Cookies.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCF7842F28FCF88E00649680 /* 1832. Check if the Sentence Is Pangram.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1832. Check if the Sentence Is Pangram.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCF8641F29065DEB001C84C7 /* 144. Binary Tree Preorder Traversal.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "144. Binary Tree Preorder Traversal.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCFA31A028EC008600BCCDC2 /* 844.BackSpace String Compare.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "844.BackSpace String Compare.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCFA31A128EC320300BCCDC2 /* 438. Find All Anagrams in a String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "438. Find All Anagrams in a String.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCFDC70E28E6BF62004B0D21 /* 509.Fibonacci Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "509.Fibonacci Number.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		FCFDC70F28E6C81D004B0D21 /* 70. Climbing Stairs.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "70. Climbing Stairs.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
/* End PBXFileReference section */

/* Begin PBXGroup section */
		D08A9B542785B85D00B75A0A = {
			isa = PBXGroup;
			children = (
				FCF5266C29952A8C007258A1 /* Category */,
				FC93760428FAF20200EE3CF1 /* DataStructure */,
				FCA5852528DAFE55006B1105 /* leetcode75 */,
				FC7AB85A28A3DFBB008EB9AF /* LeetcodeDailyChallenge */,
				FC7AB85628A3D518008EB9AF /* neetcode_blind75 */,
				FCAE6F86288D1F8D0032CB1F /* Exam */,
				D08A9B5B2785B86500B75A0A /* TopInterviewQuestions */,
			);
			sourceTree = "<group>";
		};
		D08A9B5B2785B86500B75A0A /* TopInterviewQuestions */ = {
			isa = PBXGroup;
			children = (
				FC5152C128B2052600951CBF /* Medium */,
				D08A9B5D2785DC6500B75A0A /* Easy */,
				FCB9F29628BC923C00E69C70 /* IntersectinoOfTwoArrays2.playground */,
				FCB9F29728BC958300E69C70 /* Rotate Array.playground */,
				FCB9F29828BCC45500E69C70 /* ReverseInteger.playground */,
				FCA96ECE28BEFEF700651359 /* MoveZeroes.playground */,
				FC9D953628C02919009FBACF /* StringToInteger(atoi).playground */,
				FC05FECE28C4D96800FF8126 /* 28. Find the Index of the First Occurrence in a String.playground */,
				FC1D868428C71B1D008674D5 /* 14_Lognest Common Prefix.playground */,
				FC19588C28D5A42000F346EC /* 326. Power of Three.playground */,
				FCB69DE128D88CEC00B63B09 /* 237.DeleteNodeInALinkedList.playground */,
				FCB69DE228D88D4A00B63B09 /* 19. Remove Nth Node From End of List.playground */,
				FC1DE9FB28F8F74900EB6236 /* 2095. Delete the Middle Node of a Linked List.playground */,
				FC4A4AFE290F5E0B00750F34 /* 234. Palindrom Linked List.playground */,
				FCE95D2729139E5500629F4D /* 204. Count Primes.playground */,
				FCDE900B291500CF00460C25 /* 9. Palindrome Number.playground */,
				FC7A8A2E292CB2DD002A94F5 /* 1614. Maximum Nesting Depth of the Parentheses.playground */,
			);
			path = TopInterviewQuestions;
			sourceTree = "<group>";
		};
		D08A9B5D2785DC6500B75A0A /* Easy */ = {
			isa = PBXGroup;
			children = (
				D08A9B5C2785B98E00B75A0A /* 1.TwoSum.playground */,
				D039BB06278C5C24009142ED /* 2.Remove Duplicates from Sorted Array.playground */,
				D0E7285A27903F1000DC1133 /* 3. Best Time to But and Sell Stock II.playground */,
				D0E7285B27904B6100DC1133 /* 4. Contains Duplicate.playground */,
				D0E7285C27906C5900DC1133 /* 5. Plus One.playground */,
				FCCD8FCC28BC88F6002B9188 /* SingleNumber.playground */,
			);
			path = Easy;
			sourceTree = "<group>";
		};
		FC5152C128B2052600951CBF /* Medium */ = {
			isa = PBXGroup;
			children = (
				FC5152C228B2053E00951CBF /* 2_Add Two Numbers.playground */,
			);
			path = Medium;
			sourceTree = "<group>";
		};
		FC7AB85628A3D518008EB9AF /* neetcode_blind75 */ = {
			isa = PBXGroup;
			children = (
				FC7AB85C28A3E861008EB9AF /* Two Pointers */,
				FC7AB85728A3D524008EB9AF /* Array&hashmap */,
			);
			path = neetcode_blind75;
			sourceTree = "<group>";
		};
		FC7AB85728A3D524008EB9AF /* Array&hashmap */ = {
			isa = PBXGroup;
			children = (
				FC7AB85828A3D547008EB9AF /* ValidAnagram.playground */,
				FC7AB85928A3D6DF008EB9AF /* GroupAnagrams.playground */,
				FC55FE1628A62C98006FECED /* TopKFrequentElements.playground */,
			);
			path = "Array&hashmap";
			sourceTree = "<group>";
		};
		FC7AB85A28A3DFBB008EB9AF /* LeetcodeDailyChallenge */ = {
			isa = PBXGroup;
			children = (
				FCE698BC28AE5C92003379E8 /* 1338_Reduce Array Size To The Half */,
				FCBE749F28AC9AE800107F82 /* 804_UniqueMorseCodeWords */,
				FCA337DD28ABBF4F00AAA9F0 /* AssociateProblems */,
				FC7AB85B28A3DFD4008EB9AF /* 108.Convert Sorted Array to Binary Search Tree.playground */,
				FCC1628B28AB9D7900773A2C /* 387_FirstUniqueCharacterInString.playground */,
				FC280D7528B366FC007FD6F1 /* 342_PowerOfFour.playground */,
				FC31A0E328B4BB230076514C /* 234_Palindrome_Linked_List.playground */,
				FCE2BE9428B5AC550030FCDA /* 326_PowerOfThree.playground */,
				D03D19BE28B755E600BFDEE2 /* 383_ransomNote.playground */,
				FC26AD2D28BDC86B003A8879 /* 48_RotateImage.playground */,
				FC9D953728C047ED009FBACF /* 1448_count_good_Nodes_In_Binary_Tree.playground */,
				FCAB889528C18BCA00652244 /* 637_AvarageOfLevelsInBinaryTree.playground */,
				FC1D868228C6C238008674D5 /* 429_n-ary_Tree_Level_Order_traversal.playground */,
				FC1D868328C6D82D008674D5 /* 814. Binary Tree Pruning.playground */,
				FCA567AE28C8354700413660 /* 606_ConstructStringFromBinaryTree.playground */,
				FC0813C528C9824500B368E0 /* 94. Binary Tree Inorder Traversal.playground */,
				FCDBC03D28CB774F00493DB2 /* 1996. The Number of Weak Characters in the Game.playground */,
				FCA7AD4328D9553000A0440D /* 718.Maximum Length of Repeated Subarray.playground */,
				FCA5852428DAA652006B1105 /* 985. Sum of Even Numbers After Queries.playground */,
				FCC7B34228DBEA1800D52249 /* 557. Reverse Words in a String III.playground */,
				FC17E10528DDB3BB007E0C4F /* 1680. Concatenation of Consecutive Binary Numbers.playground */,
				FC40FBD428E13FE900758F58 /* 990. Satisfiability of Equality Equations.playground */,
				FC3E41BF28EE824E00073B45 /* 981. Time Based Key-Value Store.playground */,
				FC636A5628F541AE00491B40 /* 334. Increasing Triplet Subsequence.playground */,
				FC13B73128F68FF600F90F50 /* 976. Largest Perimeter Triangle.playground */,
				FCF7842F28FCF88E00649680 /* 1832. Check if the Sentence Is Pangram.playground */,
				FC8D040728FE41750080FE04 /* 38. Count and Say.playground */,
				FC7FE8AF2900E143005F761C /* 12. Integer to Roman.playground */,
				D0B807AF29027978009D896C /* 219. Contains Duplicate II.playground */,
				D02D62CD29058BA000BD4764 /* 645. Set Mismatch.playground */,
				FC56DC8529076D790057C9A4 /* 1662. Check If Two String Arrays are Equivalent.playground */,
				FC6137E6291105E60031A8EB /* 766. Toeplitz Matrix.playground */,
				FCDE900A2914C5E900460C25 /* 345. Reverse Vowels of a String.playground */,
				FCC08E2829189DCB00E2650F /* 1323. Maximum 69 Number.playground */,
				FCCAF272291A29F400F6524E /* 1544. Make The String Great.playground */,
				FC110A0D291B71B60008891A /* 901. Online Stock Span.playground */,
				FC8A0068291C90CA00213D39 /* 1047. Remove All Adjacent Duplicates In String.playground */,
				FC04407E291DE8BD00206D65 /* 26. Remove Duplicates from Sorted Array.playground */,
				FC4F568D2921240F0075E946 /* 151. Reverse Words in a String.playground */,
				FC88D61029234E53000AC4F9 /* 222. Count Complete Tree Nodes.playground */,
				FCB82AAA292484CD006729FF /* 374. Guess Number Higher or Lower.playground */,
				68C268732940E0CC00201CE9 /* 938. Range Sum of BST.playground */,
				681115992942222100F5D9DF /* 872. Leaf-Similar Trees.playground */,
				687A3C68294B683C00E5C985 /* 1143. Longest Common Subsequence.playground */,
				682BE210294F59C6007B80D0 /* 739. Daily Temperatures.playground */,
				FCE9E1CF2963A6890007F079 /* 520. Detect Capital.playground */,
				FCE9E1D029641DCE0007F079 /* 944. Delete Columns to Make Sorted.playground */,
				FC28B0D8296800460023F457 /* 1833. Maximum Ice Cream Bars.playground */,
				FCCA9EFF296EAFFF005D8288 /* 561. Array Partition.playground */,
				FC081DA32987F922008BE61D /* 1137. N-th Tribonacci Number.playground */,
				FC100E52298A44100008F902 /* 1071. Greatest Common Divisor of Strings.playground */,
				FC0AAD8E29907D1300D521F1 /* 1470. Shuffle the Array.playground */,
				FC7B1250299A2F62000B2F3D /* 1523. Count Odd Numbers in an Interval Range.playground */,
				FC7F5EDA299B42A1005DAC61 /* 67. Add Binary.playground */,
				FC1B0EB7299C771900165904 /* 989. Add to Array-Form of Integer.playground */,
				68E6B40D29C1F99B00275222 /* 958. Check Completeness of a Binary Tree.playground */,
				FC5D95E429F9086700F95BD1 /* 258. Add Digits.playground */,
			);
			path = LeetcodeDailyChallenge;
			sourceTree = "<group>";
		};
		FC7AB85C28A3E861008EB9AF /* Two Pointers */ = {
			isa = PBXGroup;
			children = (
				FC7AB85D28A3E879008EB9AF /* ValidPalindrome.playground */,
			);
			path = "Two Pointers";
			sourceTree = "<group>";
		};
		FC93760428FAF20200EE3CF1 /* DataStructure */ = {
			isa = PBXGroup;
			children = (
				FC93760528FAF21100EE3CF1 /* 53. Maximum Subarray.playground */,
				FCBCBF7628FBE75600483644 /* 88. Merge Sorted Array.playground */,
				FC8D040828FE69630080FE04 /* 566. Reshape the Matrix.playground */,
				FC8D040928FE726C0080FE04 /* 118. Pascal's Triangle.playground */,
				FC5B31FF28FF934D00B8459E /* 74. Search a 2D Matrix.playground */,
				D03A2A7A29028BBF00DA745F /* 141. Linked List Cycle.playground */,
				D03A2A7B2902967C00DA745F /* 203. Remove Linked List Elements.playground */,
				D053EE502903B47F0042393F /* 83. Remove Duplicates from Sorted List.playground */,
				D02D62CE29058C4500BD4764 /* 20. Valid Parentheses.playground */,
				D02D62CF29058F6000BD4764 /* 232. Implement Queue using Stacks.playground */,
				FCF8641F29065DEB001C84C7 /* 144. Binary Tree Preorder Traversal.playground */,
				FC0F7F3129065F5800A6439F /* 145. Binary Tree Postorder Traversal.playground */,
				FC56DC862907794C0057C9A4 /* 104. Maximum Depth of Binary Tree.playground */,
				FC0E21FF2908C48D004603FB /* 226. Invert Binary Tree.playground */,
				FCD8F4DB290A12B500499084 /* 700. Search in a Binary Search Tree.playground */,
				FCD8F4DC290A131100499084 /* 701. Insert into a Binary Search Tree.playground */,
				FCE7BBAE290B754E00180F34 /* 653. Two Sum IV - Input is a BST.playground */,
			);
			path = DataStructure;
			sourceTree = "<group>";
		};
		FCA337DD28ABBF4F00AAA9F0 /* AssociateProblems */ = {
			isa = PBXGroup;
			children = (
				FCA337DE28ABBF7C00AAA9F0 /* 2351_FirstLetterToAppearTwice(associate 387).playground */,
			);
			path = AssociateProblems;
			sourceTree = "<group>";
		};
		FCA5852528DAFE55006B1105 /* leetcode75 */ = {
			isa = PBXGroup;
			children = (
				FCA5852628DAFE73006B1105 /* 1480. Running Sum of 1d Array.playground */,
				FCA5852728DB0230006B1105 /* 724. Find Pivot Index.playground */,
				FCC7B34328DBEE2D00D52249 /* 205. Isomorphic Strings.playground */,
				FC49BEAC28DC38260022DC3F /* 392.Is Subsequence.playground */,
				FC17E10328DD6CD1007E0C4F /* 21. Merge Two Sorted Lists.playground */,
				FC17E10428DD77D5007E0C4F /* 206. Reverse Linked List.playground */,
				FC324CB628DF440E002663EB /* 876. Middle of the Linked List.playground */,
				FC324CB728DF4485002663EB /* 142. Linked List Cycle II.playground */,
				FC79320828E0926200073485 /* 121. Best Time to Buy and Sell Stock.playground */,
				FC79320928E092B100073485 /* 409. Longest Palindrome.playground */,
				FC40FBD528E16EEB00758F58 /* 589. N-ary Tree Preorder Traversal.playground */,
				FC40FBD628E18D0100758F58 /* 102. Binary Tree Level Order Traversal.playground */,
				FC15224428E284FC0029000C /* 704. Binary Search.playground */,
				FC15224528E2A32B0029000C /* 278. First Bad Version.playground */,
				FC0CC7C628E3D13A00BBAA6A /* 98. Validate Binary Search Tree.playground */,
				FC0CC7C728E406BA00BBAA6A /* 235. Lowest Common Ancestor of a Binary Search Tree.playground */,
				FC8F862928E555990042F6E7 /* 733. Flood Fill.playground */,
				FC8F862A28E5784F0042F6E7 /* 200. Number of Islands.playground */,
				FCFDC70E28E6BF62004B0D21 /* 509.Fibonacci Number.playground */,
				FCFDC70F28E6C81D004B0D21 /* 70. Climbing Stairs.playground */,
				FC4A1B4428EA892D00510352 /* 746. Min Cost Climbing Stairs.playground */,
				FCFA31A028EC008600BCCDC2 /* 844.BackSpace String Compare.playground */,
				FCFA31A128EC320300BCCDC2 /* 438. Find All Anagrams in a String.playground */,
				FC6D53E628ED51160090795F /* 1046. Last Stone Weight.playground */,
				FC6D53E728ED6FCB0090795F /* 692. Top K Frequent Words.playground */,
				FC6D53E828ED832B0090795F /* 394. Decode String.playground */,
			);
			path = leetcode75;
			sourceTree = "<group>";
		};
		FCAE6F86288D1F8D0032CB1F /* Exam */ = {
			isa = PBXGroup;
			children = (
				FCAE6F87288D1F9D0032CB1F /* RomanInteger.playground */,
			);
			path = Exam;
			sourceTree = "<group>";
		};
		FCBE749F28AC9AE800107F82 /* 804_UniqueMorseCodeWords */ = {
			isa = PBXGroup;
			children = (
				FCBE74A028AC9B0900107F82 /* 804_Unique_Morse_Code_Words.playground */,
			);
			path = 804_UniqueMorseCodeWords;
			sourceTree = "<group>";
		};
		FCE698BC28AE5C92003379E8 /* 1338_Reduce Array Size To The Half */ = {
			isa = PBXGroup;
			children = (
				FCE698BD28AE5CAC003379E8 /* 1338_Reduce_Array_Size_to_The_Half.playground */,
			);
			path = "1338_Reduce Array Size To The Half";
			sourceTree = "<group>";
		};
		FCF5266C29952A8C007258A1 /* Category */ = {
			isa = PBXGroup;
			children = (
				FCF5266D29952A95007258A1 /* Greedy */,
			);
			path = Category;
			sourceTree = "<group>";
		};
		FCF5266D29952A95007258A1 /* Greedy */ = {
			isa = PBXGroup;
			children = (
				FCF5266E29952A9E007258A1 /* 455. Assign Cookies.playground */,
				FCE345C5299681D3002A35DD /* 605. Can Place Flowers.playground */,
				FC290727299779ED003855B4 /* 680. Valid Palindrome II.playground */,
				FC3E878729991C98003C2E2B /* 860. Lemonade Change.playground */,
				FC7B1251299A36C1000B2F3D /* 942. DI String Match.playground */,
				FC7CAB0929A86977007158B3 /* 2160. Minimum Sum of Four Digit Number After Splitting Digits.playground */,
			);
			path = Greedy;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXProject section */
		D08A9B552785B85D00B75A0A /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = 1;
				LastUpgradeCheck = 1310;
			};
			buildConfigurationList = D08A9B582785B85D00B75A0A /* Build configuration list for PBXProject "LeetcodeSwift" */;
			compatibilityVersion = "Xcode 13.0";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = D08A9B542785B85D00B75A0A;
			projectDirPath = "";
			projectRoot = "";
			targets = (
			);
		};
/* End PBXProject section */

/* Begin XCBuildConfiguration section */
		D08A9B592785B85D00B75A0A /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		D08A9B5A2785B85D00B75A0A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		D08A9B582785B85D00B75A0A /* Build configuration list for PBXProject "LeetcodeSwift" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D08A9B592785B85D00B75A0A /* Debug */,
				D08A9B5A2785B85D00B75A0A /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = D08A9B552785B85D00B75A0A /* Project object */;
}
